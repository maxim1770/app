version: "3.8"
services:

  redis:
    container_name: redis
    image: redis:latest
    env_file:
      - .env_without_db
    expose:
      - 6379
    networks:
      - custom
  celery:
    container_name: celery
    depends_on:
      - redis
    command: pipenv run celery -A celery:celery worker --beat --loglevel=info --detach
    volumes:
      - .:/code
    env_file:
      - .env_without_db
    build:
      context: ./backend
      dockerfile: celery.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    networks:
      - custom
  flower:
    container_name: flower
    depends_on:
      - redis
    command: pipenv run celery -A celery:celery flower --detach
    volumes:
      - .:/code
    env_file:
      - .env_without_db
    ports:
      - "5555:5555"
    build:
      context: ./backend
      dockerfile: celery.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    networks:
      - custom
  backend:
    container_name: backend
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    depends_on:
      - redis
    expose:
      - 8000
    env_file:
      - .env_without_db
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      - SMTP_HOST=${SMTP_HOST}
    build:
      context: ./backend
      dockerfile: backend_without_db.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true} # На prode установить -false
    networks:
      - custom
  nginx-backend:
    container_name: nginx-backend
    build:
      context: nginx_backend_without_db
    expose:
      - 81
    ports:
      - "81:80"
    restart: always
    depends_on:
      - backend
    networks:
      - custom

networks:
  custom:
    driver: bridge